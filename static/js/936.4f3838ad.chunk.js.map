{"version":3,"file":"static/js/936.4f3838ad.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/FormNumber/FormNumber.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/FormTextMessage/FormTextMessage.jsx","pages/Chats.styled.js","components/AsideComponent/AsideComponent.styled.js","components/AsideComponent/AsideComponent.jsx","pages/Chats.js"],"sourcesContent":["import { Field, Form } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const FormContainer = styled(Form)`\n  background-color: ${(props) => props.theme.color.bgColor};\n  width: 350px;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  border-radius: 10px;\n`;\n\nexport const FieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled(Field)`\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const ButtonForm = styled.button`\n  display: block;\n  height: 40px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.2;\n\n  color: ${(props) => props.theme.color.secondaryColor};\n  background-color: ${(props) => props.theme.color.bgBtn};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${(props) => props.theme.color.accentColor};\n  }\n`;\n","import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  ButtonForm,\n  FieldContainer,\n  FormContainer,\n  Input,\n} from \"../Form/Form.styled\";\n\nconst validateSchema = Yup.object().shape({\n  phone: Yup.number().required(\"Required\"),\n});\n\nexport const FormNumber = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n      }}\n      validationSchema={validateSchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors, touched }) => (\n        <FormContainer>\n          <FieldContainer>\n            <label htmlFor=\"phone\">Telephone number</label>\n            <Input id=\"phone\" name=\"phone\" placeholder=\"Enter phone\" />\n            {errors.phone && touched.phone ? <div>{errors.phone}</div> : null}\n          </FieldContainer>\n\n          <ButtonForm type=\"submit\">Choose number</ButtonForm>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ModalContainer = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n","import { FormNumber } from \"../FormNumber/FormNumber\";\nimport { Overlay, ModalContainer } from \"./Modal.styled\";\nimport { useEffect } from \"react\";\n\nexport const Modal = ({ onModalClose, onSubmit }) => {\n  const onCloseEsc = (e) => {\n    if (e.code === \"Escape\") {\n      onModalClose();\n    }\n  };\n\n  const onCloseBackdrop = (e) => {\n    if (e.currentTarget === e.target) {\n      onModalClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onCloseEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onCloseEsc);\n    };\n  });\n\n  return (\n    <Overlay onClick={onCloseBackdrop}>\n      <ModalContainer>\n        <FormNumber onSubmit={onSubmit} />\n      </ModalContainer>\n    </Overlay>\n  );\n};\n","import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  ButtonForm,\n  FieldContainer,\n  FormContainer,\n  Input,\n} from \"../Form/Form.styled\";\n\nconst validateSchema = Yup.object().shape({\n  text: Yup.string().required(\"Required\"),\n});\n\nexport const FormTextMessage = ({ onSubmitMessage }) => {\n  return (\n    <Formik\n      initialValues={{\n        text: \"\",\n      }}\n      validationSchema={validateSchema}\n      onSubmit={onSubmitMessage}\n    >\n      {({ errors, touched }) => (\n        <FormContainer>\n          <FieldContainer>\n            <Input id=\"text\" name=\"text\" placeholder=\"Enter text message\" />\n            {errors.text && touched.text ? <div>{errors.text}</div> : null}\n          </FieldContainer>\n\n          <ButtonForm type=\"submit\">Submit</ButtonForm>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ContainerChats = styled.div`\n  display: flex;\n  width: 100wh;\n`;\n\nexport const ChatSideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: calc(100% - 400px);\n  height: 100vh;\n`;\n","import styled from \"styled-components\";\n\nexport const Aside = styled.aside`\n  width: 400px;\n  height: 100vh;\n  background-color: ${(props) => props.theme.color.bgSecondaryColor};\n`;\n\nexport const AvatarImg = styled.img`\n  border-radius: 20px;\n`;\n\nexport const AsideHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  height: 80px;\n  border: 1px solid #c8bb91;\n  background-color: ${(props) => props.theme.color.bgAsideColor};\n`;\n\nexport const ButtonAddNumber = styled.button`\n  display: inline-block;\n  padding: 5px;\n  border: none;\n  background-color: transparent;\n  transition: border 500ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #a1a1a1;\n    border-radius: 5px;\n  }\n`;\n","import {\n  Aside,\n  AsideHeader,\n  AvatarImg,\n  ButtonAddNumber,\n} from \"./AsideComponent.styled\";\nimport avatar from \"../../img/avatar.jpg\";\nimport { BsFillTelephonePlusFill } from \"react-icons/bs\";\n\nexport const AsideComponent = ({ onModalOpen }) => {\n  return (\n    <Aside>\n      <AsideHeader>\n        <AvatarImg src={avatar} alt=\"avatar\" width=\"40px\" height=\"40px\" />\n        <ButtonAddNumber\n          type=\"button\"\n          onClick={onModalOpen}\n          aria-label=\"add phone number\"\n        >\n          <BsFillTelephonePlusFill />\n        </ButtonAddNumber>\n      </AsideHeader>\n    </Aside>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { useCallback } from \"react\";\nimport { FormTextMessage } from \"../components/FormTextMessage/FormTextMessage\";\nimport { sendMessage, getNotification } from \"../api/api\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/auth/selectors\";\nimport { toast } from \"react-toastify\";\nimport { Container } from \"./Home.styled\";\nimport { ContainerChats, ChatSideContainer } from \"./Chats.styled\";\nimport { AsideComponent } from \"../components/AsideComponent/AsideComponent\";\nimport { AsideHeader } from \"../components/AsideComponent/AsideComponent.styled\";\n\nconst Chats = () => {\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { idInstance, apiTokenInstance } = useSelector(selectUser);\n  const [listNotification, setListNotification] = useState([]);\n\n  const onModalOpen = useCallback(() => setIsModalOpen(true), []);\n\n  const onModalClose = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n\n  const onSubmit = useCallback((values, { resetForm }) => {\n    setPhoneNumber(values.phone);\n    setIsModalOpen(false);\n    setListNotification([]);\n    resetForm();\n  }, []);\n\n  const onSubmitMessage = useCallback(\n    async (values, { resetForm }) => {\n      try {\n        const data = {\n          chatId: `${phoneNumber}@c.us`,\n          message: values.text,\n        };\n\n        const id = await sendMessage(data, idInstance, apiTokenInstance);\n        setListNotification((prevState) => [\n          ...prevState,\n          { id, message: data.message },\n        ]);\n        resetForm();\n      } catch (error) {\n        toast.error(error.message);\n      }\n    },\n    [phoneNumber, apiTokenInstance, idInstance]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getNotification(idInstance, apiTokenInstance, setListNotification);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [apiTokenInstance, idInstance]);\n\n  return (\n    <main>\n      <Container>\n        <ContainerChats>\n          <AsideComponent onModalOpen={onModalOpen} />\n          <ChatSideContainer>\n            {phoneNumber && (\n              <>\n                <AsideHeader>\n                  <p>{phoneNumber}</p>\n                </AsideHeader>\n                {listNotification.length > 0 && (\n                  <ul>\n                    {listNotification.map(({ id, message }) => (\n                      <li key={id}>{message}</li>\n                    ))}\n                  </ul>\n                )}\n                <FormTextMessage onSubmitMessage={onSubmitMessage} />\n              </>\n            )}\n          </ChatSideContainer>\n          {isModalOpen && (\n            <Modal onModalClose={onModalClose} onSubmit={onSubmit} />\n          )}\n        </ContainerChats>\n      </Container>\n    </main>\n  );\n};\n\nexport default Chats;\n"],"names":["FormContainer","styled","Form","_templateObject","_taggedTemplateLiteral","props","theme","color","bgColor","FieldContainer","_templateObject2","Input","Field","_templateObject3","ButtonForm","_templateObject4","secondaryColor","bgBtn","accentColor","validateSchema","Yup","shape","phone","required","FormNumber","_ref","onSubmit","_jsx","Formik","initialValues","validationSchema","children","_ref2","errors","touched","_jsxs","htmlFor","id","name","placeholder","type","ModalContainer","Overlay","Modal","onModalClose","onCloseEsc","e","code","useEffect","window","addEventListener","removeEventListener","onClick","currentTarget","target","text","FormTextMessage","onSubmitMessage","ContainerChats","ChatSideContainer","Aside","bgSecondaryColor","AvatarImg","AsideHeader","bgAsideColor","ButtonAddNumber","AsideComponent","onModalOpen","src","alt","width","height","BsFillTelephonePlusFill","_useState","useState","_useState2","_slicedToArray","phoneNumber","setPhoneNumber","_useState3","_useState4","isModalOpen","setIsModalOpen","_useSelector","useSelector","selectUser","idInstance","apiTokenInstance","_useState5","_useState6","listNotification","setListNotification","useCallback","values","resetForm","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","chatId","concat","message","sendMessage","sent","prevState","_toConsumableArray","t0","toast","stop","_x","_x2","apply","arguments","interval","setInterval","getNotification","clearInterval","Container","_Fragment","length","map","_ref4"],"sourceRoot":""}