{"version":3,"file":"static/js/765.c4c20526.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","pages/Chats.styled.js","components/FormNumber/FormNumber.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/AsideComponent/AsideComponent.styled.js","components/AsideComponent/AsideComponent.jsx","components/FormTextMessage/FormTextMessage.styled.js","components/FormTextMessage/FormTextMessage.jsx","components/MessageItem/MessageItem.styled.js","components/MessageItem/MessageItem.jsx","components/MessagesList/MessagesList.styled.js","components/MessagesList/MessagesList.jsx","components/ChatComponent/ChatComponent.jsx","pages/Chats.js"],"sourcesContent":["import { Field, Form } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const FormContainer = styled(Form)`\n  background-color: ${(props) => props.theme.color.bgColor};\n  width: 350px;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  border-radius: 10px;\n`;\n\nexport const FieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled(Field)`\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const ButtonForm = styled.button`\n  display: block;\n  height: 40px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.2;\n\n  color: ${(props) => props.theme.color.secondaryColor};\n  background-color: ${(props) => props.theme.color.bgBtn};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: ${(props) => props.theme.color.accentColor};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ContainerChats = styled.div`\n  display: flex;\n  width: 100wh;\n`;\n\nexport const ChatSideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: calc(100% - 400px);\n  height: 100vh;\n`;\n","import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  ButtonForm,\n  FieldContainer,\n  FormContainer,\n  Input,\n} from \"../Form/Form.styled\";\n\nconst validateSchema = Yup.object().shape({\n  phone: Yup.number().required(\"Required\"),\n});\n\nexport const FormNumber = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        phone: \"\",\n      }}\n      validationSchema={validateSchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors, touched }) => (\n        <FormContainer>\n          <FieldContainer>\n            <label htmlFor=\"phone\">Telephone number</label>\n            <Input id=\"phone\" name=\"phone\" placeholder=\"Format - 00000000000\" />\n            {errors.phone && touched.phone ? <div>{errors.phone}</div> : null}\n          </FieldContainer>\n\n          <ButtonForm type=\"submit\">Choose number</ButtonForm>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ModalContainer = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n","import { FormNumber } from \"../FormNumber/FormNumber\";\nimport { Overlay, ModalContainer } from \"./Modal.styled\";\nimport { useEffect } from \"react\";\n\nexport const Modal = ({ onModalClose, onSubmit }) => {\n  const onCloseEsc = (e) => {\n    if (e.code === \"Escape\") {\n      onModalClose();\n    }\n  };\n\n  const onCloseBackdrop = (e) => {\n    if (e.currentTarget === e.target) {\n      onModalClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onCloseEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onCloseEsc);\n    };\n  });\n\n  return (\n    <Overlay onClick={onCloseBackdrop}>\n      <ModalContainer>\n        <FormNumber onSubmit={onSubmit} />\n      </ModalContainer>\n    </Overlay>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Aside = styled.aside`\n  width: 400px;\n  height: 100vh;\n  background-color: ${(props) => props.theme.color.bgSecondaryColor};\n`;\n\nexport const AvatarImg = styled.img`\n  border-radius: 20px;\n`;\n\nexport const AsideHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  height: 80px;\n  border: 1px solid #c8bb91;\n  background-color: ${(props) => props.theme.color.bgAsideColor};\n`;\n\nexport const ButtonAdd = styled.button`\n  display: inline-block;\n  padding: 5px;\n  border: none;\n  background-color: transparent;\n  transition: border 500ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #a1a1a1;\n    border-radius: 5px;\n  }\n`;\n","import {\n  Aside,\n  AsideHeader,\n  AvatarImg,\n  ButtonAdd,\n} from \"./AsideComponent.styled\";\nimport avatar from \"../../img/avatar.jpg\";\nimport { BsFillTelephonePlusFill } from \"react-icons/bs\";\n\nexport const AsideComponent = ({ onModalOpen }) => {\n  return (\n    <Aside>\n      <AsideHeader>\n        <AvatarImg src={avatar} alt=\"avatar\" width=\"40px\" height=\"40px\" />\n        <ButtonAdd\n          type=\"button\"\n          onClick={onModalOpen}\n          aria-label=\"add phone number\"\n        >\n          <BsFillTelephonePlusFill />\n        </ButtonAdd>\n      </AsideHeader>\n    </Aside>\n  );\n};\n","import { Field, Form } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const ContainerFormMessage = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  width: 100%;\n  height: 90px;\n  background-color: ${(props) => props.theme.color.bgAsideColor};\n`;\n\nexport const InputMessage = styled(Field)`\n  height: 50px;\n  width: 1050px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FieldContainer } from \"../Form/Form.styled\";\nimport { ContainerFormMessage, InputMessage } from \"./FormTextMessage.styled\";\nimport { FaLocationArrow } from \"react-icons/fa\";\nimport { ButtonAdd } from \"../AsideComponent/AsideComponent.styled\";\n\nconst validateSchema = Yup.object().shape({\n  text: Yup.string().required(\"Required\"),\n});\n\nexport const FormTextMessage = ({ onSubmitMessage }) => {\n  return (\n    <Formik\n      initialValues={{\n        text: \"\",\n      }}\n      validationSchema={validateSchema}\n      onSubmit={onSubmitMessage}\n    >\n      {({ errors, touched }) => (\n        <ContainerFormMessage>\n          <FieldContainer>\n            <InputMessage\n              id=\"text\"\n              name=\"text\"\n              placeholder=\"Enter text message\"\n            />\n            {errors.text && touched.text ? <div>{errors.text}</div> : null}\n          </FieldContainer>\n\n          <ButtonAdd type=\"submit\" aria-label=\"Send message\">\n            <FaLocationArrow />\n          </ButtonAdd>\n        </ContainerFormMessage>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MessageItemContainer = styled.li`\n  height: auto;\n  padding: 10px;\n  border-radius: 10px;\n  margin-left: ${(props) => (props.self === \"my\" ? \"0\" : \"auto\")};\n  background-color: ${(props) => props.theme.color.bgAsideColor};\n`;\n\nexport const SenderName = styled.p`\n  font-size: 12px;\n  color: ${(props) => props.theme.color.thirdColor};\n  margin-bottom: 5px;\n`;\n","import { MessageItemContainer, SenderName } from \"./MessageItem.styled\";\n\nexport const MessageItem = ({ message, sender }) => {\n  const senderText =\n    sender === \"You\" ? sender : sender.slice(0, sender.length - 5);\n  return (\n    <MessageItemContainer self={sender === \"You\" ? \"my\" : \"\"}>\n      <SenderName>{senderText}</SenderName>\n      <p>{message}</p>\n    </MessageItemContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ListMessages = styled.ul`\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: flex-start;\n  overflow-y: scroll;\n`;\n","import { MessageItem } from \"../MessageItem/MessageItem\";\nimport { ListMessages } from \"./MessagesList.styled\";\n\nexport const MessagesList = ({ list }) => {\n  return (\n    <ListMessages>\n      {list.map(({ id, message, sender }) => (\n        <MessageItem key={id} message={message} sender={sender} />\n      ))}\n    </ListMessages>\n  );\n};\n","import { AsideHeader } from \"../AsideComponent/AsideComponent.styled\";\nimport { FormTextMessage } from \"../FormTextMessage/FormTextMessage\";\nimport { MessagesList } from \"../MessagesList/MessagesList\";\n\nexport const ChatComponent = ({\n  phoneNumber,\n  listNotification,\n  onSubmitMessage,\n}) => {\n  return (\n    <>\n      <AsideHeader>\n        <p>{phoneNumber}</p>\n      </AsideHeader>\n      {listNotification.length > 0 && <MessagesList list={listNotification} />}\n      <FormTextMessage onSubmitMessage={onSubmitMessage} />\n    </>\n  );\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { sendMessage, getNotification } from \"../api/api\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/auth/selectors\";\nimport { toast } from \"react-toastify\";\nimport { Container } from \"./Home.styled\";\nimport { ContainerChats, ChatSideContainer } from \"./Chats.styled\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { AsideComponent } from \"../components/AsideComponent/AsideComponent\";\nimport { ChatComponent } from \"../components/ChatComponent/ChatComponent\";\n\nconst getPhoneFromStorage = () => {\n  const storagePhone = localStorage.getItem(\"phone\");\n  return storagePhone ? JSON.parse(storagePhone) : \"\";\n};\n\nconst getChatsFromStorage = (phoneNumber) => {\n  const storageList = localStorage.getItem(\"listMessages\");\n  if (storageList) {\n    const parseList = JSON.parse(storageList);\n    const currentList = parseList.find(\n      (item) => item.phoneNumber === phoneNumber\n    );\n    return currentList ? currentList.listNotification : [];\n  }\n  return [];\n};\n\nconst Chats = () => {\n  const [phoneNumber, setPhoneNumber] = useState(getPhoneFromStorage);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { idInstance, apiTokenInstance } = useSelector(selectUser);\n  const [listNotification, setListNotification] = useState(() =>\n    getChatsFromStorage(phoneNumber)\n  );\n\n  const onModalOpen = useCallback(() => setIsModalOpen(true), []);\n\n  const onModalClose = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n\n  const onSubmit = useCallback((values, { resetForm }) => {\n    const { phone } = values;\n    setPhoneNumber(phone);\n    setIsModalOpen(false);\n    setListNotification(() => getChatsFromStorage(phone));\n    resetForm();\n  }, []);\n\n  const onSubmitMessage = useCallback(\n    async (values, { resetForm }) => {\n      try {\n        const data = {\n          chatId: `${phoneNumber}@c.us`,\n          message: values.text,\n        };\n\n        const id = await sendMessage(data, idInstance, apiTokenInstance);\n        setListNotification((prevState) => [\n          ...prevState,\n          { id, message: data.message, sender: \"You\" },\n        ]);\n        resetForm();\n      } catch (error) {\n        toast.error(error.message);\n      }\n    },\n    [phoneNumber, apiTokenInstance, idInstance]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getNotification(\n        idInstance,\n        apiTokenInstance,\n        setListNotification,\n        phoneNumber\n      );\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [apiTokenInstance, idInstance, phoneNumber]);\n\n  useEffect(() => {\n    const listStorage = localStorage.getItem(\"listMessages\");\n\n    if (listStorage) {\n      const list = JSON.parse(listStorage);\n\n      const matchNumber = list.find((item) => item.phoneNumber === phoneNumber);\n\n      if (matchNumber) {\n        const updateList = list.map((item) =>\n          item.phoneNumber === matchNumber.phoneNumber\n            ? { phoneNumber, listNotification }\n            : item\n        );\n\n        localStorage.setItem(\"listMessages\", JSON.stringify(updateList));\n      } else {\n        list.push({ phoneNumber, listNotification });\n        localStorage.setItem(\"listMessages\", JSON.stringify(list));\n      }\n    } else {\n      localStorage.setItem(\n        \"listMessages\",\n        JSON.stringify([{ phoneNumber, listNotification }])\n      );\n    }\n\n    localStorage.setItem(\"phone\", JSON.stringify(phoneNumber));\n  }, [listNotification, phoneNumber]);\n\n  return (\n    <main>\n      <Container>\n        <ContainerChats>\n          <AsideComponent onModalOpen={onModalOpen} />\n          <ChatSideContainer>\n            {phoneNumber && (\n              <ChatComponent\n                phoneNumber={phoneNumber}\n                listNotification={listNotification}\n                onSubmitMessage={onSubmitMessage}\n              />\n            )}\n          </ChatSideContainer>\n          {isModalOpen && (\n            <Modal onModalClose={onModalClose} onSubmit={onSubmit} />\n          )}\n        </ContainerChats>\n      </Container>\n    </main>\n  );\n};\n\nexport default Chats;\n"],"names":["FormContainer","styled","Form","_templateObject","_taggedTemplateLiteral","props","theme","color","bgColor","FieldContainer","_templateObject2","Input","Field","_templateObject3","ButtonForm","_templateObject4","secondaryColor","bgBtn","accentColor","ContainerChats","ChatSideContainer","validateSchema","Yup","shape","phone","required","FormNumber","_ref","onSubmit","_jsx","Formik","initialValues","validationSchema","children","_ref2","errors","touched","_jsxs","htmlFor","id","name","placeholder","type","ModalContainer","Overlay","Modal","onModalClose","onCloseEsc","e","code","useEffect","window","addEventListener","removeEventListener","onClick","currentTarget","target","Aside","bgSecondaryColor","AvatarImg","AsideHeader","bgAsideColor","ButtonAdd","AsideComponent","onModalOpen","src","alt","width","height","BsFillTelephonePlusFill","ContainerFormMessage","InputMessage","text","FormTextMessage","onSubmitMessage","FaLocationArrow","MessageItemContainer","self","SenderName","thirdColor","MessageItem","message","sender","senderText","slice","length","ListMessages","MessagesList","list","map","ChatComponent","phoneNumber","listNotification","_Fragment","getPhoneFromStorage","storagePhone","localStorage","getItem","JSON","parse","getChatsFromStorage","storageList","currentList","find","item","_useState","useState","_useState2","_slicedToArray","setPhoneNumber","_useState3","_useState4","isModalOpen","setIsModalOpen","_useSelector","useSelector","selectUser","idInstance","apiTokenInstance","_useState5","_useState6","setListNotification","useCallback","values","resetForm","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","chatId","concat","sendMessage","sent","prevState","_toConsumableArray","t0","toast","stop","_x","_x2","apply","arguments","interval","setInterval","getNotification","clearInterval","listStorage","matchNumber","updateList","setItem","stringify","push","Container"],"sourceRoot":""}